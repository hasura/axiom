version: "3.8"
name: axiom
services:
  postgres:
    image: ankane/pgvector:latest
    restart: unless-stopped
    networks:
      - dokploy-network
    expose:
      - "5432"
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.postgres-${UNIQUE_NAME}.entrypoints=postgres"
      - "traefik.tcp.routers.postgres-${UNIQUE_NAME}.rule=HostSNI(`pg-${UNIQUE_NAME}.${DOMAIN}`)"
      - "traefik.tcp.services.postgres-${UNIQUE_NAME}.loadbalancer.server.port=5432"
      - "traefik.tcp.routers.postgres-${UNIQUE_NAME}.tls=true"
      - "traefik.tcp.routers.postgres-${UNIQUE_NAME}.tls.certresolver=letsencrypt"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./data/postgres/:/docker-entrypoint-initdb.d/
    environment:
      PGUSER: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
    healthcheck:
      test: "pg_isready -q -h postgres"
      interval: 10s
      timeout: 5s
      retries: 30

  mongodb:
    image: mongo
    restart: unless-stopped
    networks:
      - dokploy-network
    expose:
      - 27017
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.mongodb-${UNIQUE_NAME}.entrypoints=mongodb"
      - "traefik.tcp.routers.mongodb-${UNIQUE_NAME}.rule=HostSNI(`mongodb-${UNIQUE_NAME}.${DOMAIN}`)"
      - "traefik.tcp.services.mongodb-${UNIQUE_NAME}.loadbalancer.server.port=27017"
      - "traefik.tcp.routers.mongodb-${UNIQUE_NAME}.tls=true"
      - "traefik.tcp.routers.mongodb-${UNIQUE_NAME}.tls.certresolver=letsencrypt"
    command: mongod --noauth
    volumes:
      - mongodb-data:/data/db
      - ./data/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    environment:
      - MONGO_INITDB_DATABASE=holotel
    mem_limit: 500m

  clickhouse:
    image: clickhouse/clickhouse-server
    restart: unless-stopped
    networks:
      - dokploy-network
    user: "101:101"
    expose:
      - 8123
      - 9000
    hostname: clickhouse
    environment:
      CLICKHOUSE_TIMEOUT_CONNECT: 30
      CLICKHOUSE_TIMEOUT_SEND: 30
      CLICKHOUSE_TIMEOUT_RECEIVE: 30
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: default
    labels:
      - "traefik.enable=true"
      # HTTP Router for web traffic on port 8123
      - "traefik.http.routers.clickhouse-http-${UNIQUE_NAME}.rule=Host(`ch-${UNIQUE_NAME}.${DOMAIN}`)"
      - "traefik.http.routers.clickhouse-http-${UNIQUE_NAME}.entrypoints=web"
      - "traefik.http.services.clickhouse-http-${UNIQUE_NAME}.loadbalancer.server.port=8123"
      # TCP Router for secure traffic on port 9440
      - "traefik.tcp.routers.clickhouse-tcp-${UNIQUE_NAME}.rule=HostSNI(`ch-${UNIQUE_NAME}.${DOMAIN}`)"
      - "traefik.tcp.routers.clickhouse-tcp-${UNIQUE_NAME}.entrypoints=clickhouse"
      - "traefik.tcp.routers.clickhouse-tcp-${UNIQUE_NAME}.tls=true"
      - "traefik.tcp.services.clickhouse-tcp-${UNIQUE_NAME}.loadbalancer.server.port=9000"
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - ./data/clickhouse/:/docker-entrypoint-initdb.d/

volumes:
  postgres-data:
  clickhouse-data:
  mongodb-data:

networks:
  dokploy-network:
    external: true
