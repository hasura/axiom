version: '3.8'

# FinIQ - Financial Intelligence & Quality
# PromptQL-powered transaction reconciliation and analytics platform
services:
  postgres:
    image: postgres:15
    container_name: finiq_postgres
    environment:
      POSTGRES_DB: fin_recon
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-finiq_secure_pass}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      # Mount entire postgres directory (contains SQL scripts and CSV files)
      - ./postgres:/docker-entrypoint-initdb.d:ro
      # Persistent data
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d fin_recon"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - finiq_network
    restart: unless-stopped

  # MongoDB for unstructured financial intelligence data
  mongodb:
    image: mongo:7.0
    container_name: finiq_mongodb
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-finiq}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-finiq123}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
    ports:
      - "27017:27017"
    volumes:
      # MongoDB persistent data
      - mongodb_data:/data/db
      # MongoDB initialization scripts
      - ./mongodb/init:/docker-entrypoint-initdb.d:ro
      # MongoDB sample data files for automatic loading
      - ./mongodb/data:/tmp/finiq-data:ro
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    networks:
      - finiq_network
    restart: unless-stopped

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: finiq_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@finiq.com
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - finiq_network
    restart: unless-stopped
    profiles:
      - tools  # Optional service, start with: docker-compose --profile tools up

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  mongodb_data:
    driver: local

networks:
  finiq_network:
    driver: bridge