name: axiomaml
services:
  # Databases
  postgres:
    image: postgres
    container_name: axiomaml_postgres
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    environment:
      PGUSER: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      READONLY_PASSWORD: ${READONLY_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: "pg_isready -q -h postgres"
      interval: 10s
      timeout: 5s
      retries: 30

  mongodb:
    image: mongo
    container_name: axiomaml_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    command: mongod --auth
    volumes:
      - mongodb-data:/data/db
      - ./mongodb:/docker-entrypoint-initdb.d/
    environment:
      - MONGO_INITDB_DATABASE=aml
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    extra_hosts:
      - local.hasura.dev=host-gateway
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok", "--quiet"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 40s

  mongo-seed:
    env_file:
        - .env
    container_name: axiomaml_mongo_seed
    build:
        context: ./mongo_seed
        dockerfile: Dockerfile
    environment:
        - DATABASE_URI=mongodb://mongodb:27017/aml
        - USERNAME=presales
        - PASSWORD=${MONGO_PASSWORD}
        - READONLY_PASSWORD=${READONLY_PASSWORD}
    depends_on:
      mongodb:
        condition: service_healthy
    restart: "no"

volumes:
  postgres-data:
  mongodb-data:
