---
kind: ObjectType
version: v1
definition:
  name: FinancialInconsistencyResponse
  fields:
    - name: accountId
      type: Float!
    - name: assignedTo
      type: String
    - name: flagId
      type: String
    - name: severity
      type: String!
    - name: status
      type: String!
    - name: transactionDate
      type: String!
  graphql:
    typeName: FinancialInconsistencyResponse
    inputTypeName: FinancialInconsistencyResponseInput
  dataConnectorTypeMapping:
    - dataConnectorName: valuation_operations
      dataConnectorObjectType: FinancialInconsistencyResponse
      fieldMapping:
        accountId:
          column:
            name: account_id
        assignedTo:
          column:
            name: assigned_to
        flagId:
          column:
            name: flag_id
        severity:
          column:
            name: severity
        status:
          column:
            name: status
        transactionDate:
          column:
            name: transaction_date

---
kind: TypePermissions
version: v1
definition:
  typeName: FinancialInconsistencyResponse
  permissions:
    - role: admin
      output:
        allowedFields:
          - accountId
          - assignedTo
          - flagId
          - severity
          - status
          - transactionDate

---
kind: Command
version: v1
definition:
  name: FlagFinancialInconsistency
  outputType: FinancialInconsistencyResponse!
  arguments:
    - name: accountId
      type: Float!
    - name: accountName
      type: String!
    - name: amount
      type: Float!
    - name: assignedAnalyst
      type: String
    - name: description
      type: String!
    - name: severity
      type: String!
    - name: transactionDate
      type: String!
  source:
    dataConnectorName: valuation_operations
    dataConnectorCommand:
      procedure: flagFinancialInconsistency
  graphql:
    rootFieldName: flagFinancialInconsistency
    rootFieldKind: Mutation
  description: >-
    **Description:**

    This function flags financial inconsistencies in the company's data for further investigation. It creates a record of the potential issue, assigns it a severity level, and tracks its investigation status. This function is essential for identifying accounting irregularities, data discrepancies, or suspicious financial patterns during due diligence.


    **When to Call:**

    - When discovering a mismatch between financial statements and general ledger entries

    - Upon identifying unusual accounting treatments or questionable revenue recognition

    - When transaction patterns deviate significantly from historical norms

    - If financial ratios suggest potential manipulation or reporting issues

---
kind: CommandPermissions
version: v1
definition:
  commandName: FlagFinancialInconsistency
  permissions:
    - role: admin
      allowExecution: true

