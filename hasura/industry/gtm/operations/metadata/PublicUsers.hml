---
kind: ObjectType
version: v1
definition:
  name: PublicUsers
  description: "Object type for public.users. Description: null"
  fields:
    - name: createdAt
      type: Timestamptz!
    - name: email
      type: String_1
    - name: id
      type: Int32!
    - name: password
      type: String_1
    - name: roles
      type: String_1
    - name: updatedAt
      type: Timestamptz!
  graphql:
    typeName: PublicUsers
    inputTypeName: PublicUsersInput
  dataConnectorTypeMapping:
    - dataConnectorName: auth
      dataConnectorObjectType: public.users
      fieldMapping:
        createdAt:
          column:
            name: created_at
        email:
          column:
            name: email
        id:
          column:
            name: id
        password:
          column:
            name: password
        roles:
          column:
            name: roles
        updatedAt:
          column:
            name: updated_at

---
kind: TypePermissions
version: v1
definition:
  typeName: PublicUsers
  permissions:
    - role: admin
      output:
        allowedFields:
          - createdAt
          - email
          - id
          - password
          - roles
          - updatedAt

---
kind: BooleanExpressionType
version: v1
definition:
  name: PublicUsersBoolExp
  operand:
    object:
      type: PublicUsers
      comparableFields:
        - fieldName: createdAt
          booleanExpressionType: TimestampWithTimeZoneBoolExp
        - fieldName: email
          booleanExpressionType: CharacterVaryingBoolExp
        - fieldName: id
          booleanExpressionType: IntegerBoolExp
        - fieldName: password
          booleanExpressionType: CharacterVaryingBoolExp
        - fieldName: roles
          booleanExpressionType: CharacterVaryingBoolExp
        - fieldName: updatedAt
          booleanExpressionType: TimestampWithTimeZoneBoolExp
      comparableRelationships: []
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: PublicUsersBoolExp

---
kind: AggregateExpression
version: v1
definition:
  name: PublicUsersAggExp
  operand:
    object:
      aggregatedType: PublicUsers
      aggregatableFields:
        - fieldName: createdAt
          aggregateExpression: TimestampWithTimeZoneAggExp
        - fieldName: email
          aggregateExpression: CharacterVaryingAggExp
        - fieldName: id
          aggregateExpression: IntegerAggExp
        - fieldName: password
          aggregateExpression: CharacterVaryingAggExp
        - fieldName: roles
          aggregateExpression: CharacterVaryingAggExp
        - fieldName: updatedAt
          aggregateExpression: TimestampWithTimeZoneAggExp
  count:
    enable: true
  graphql:
    selectTypeName: PublicUsersAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: PublicUsersOrderByExp
  operand:
    object:
      orderedType: PublicUsers
      orderableFields:
        - fieldName: createdAt
          orderByExpression: TimestamptzOrderByExp
        - fieldName: email
          orderByExpression: String1OrderByExp
        - fieldName: id
          orderByExpression: Int32OrderByExp
        - fieldName: password
          orderByExpression: String1OrderByExp
        - fieldName: roles
          orderByExpression: String1OrderByExp
        - fieldName: updatedAt
          orderByExpression: TimestamptzOrderByExp
      orderableRelationships: []
  graphql:
    expressionTypeName: PublicUsersOrderByExp

---
kind: Model
version: v2
definition:
  name: PublicUsers
  objectType: PublicUsers
  source:
    dataConnectorName: auth
    collection: public.users
  filterExpressionType: PublicUsersBoolExp
  aggregateExpression: PublicUsersAggExp
  orderByExpression: PublicUsersOrderByExp
  graphql:
    selectMany:
      queryRootField: publicUsers
      subscription:
        rootField: publicUsers
    selectUniques:
      - queryRootField: publicUsersById
        uniqueIdentifier:
          - id
        subscription:
          rootField: publicUsersById
    filterInputTypeName: PublicUsersFilterInput
    aggregate:
      queryRootField: publicUsersAggregate
      subscription:
        rootField: publicUsersAggregate

---
kind: ModelPermissions
version: v1
definition:
  modelName: PublicUsers
  permissions:
    - role: admin
      select:
        filter: null
        allowSubscriptions: true

