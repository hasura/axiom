---
kind: ObjectType
version: v1
definition:
  name: Customers
  fields:
    - name: address
      type: Varchar
    - name: city
      type: Varchar
    - name: country
      type: Varchar
    - name: customerId
      type: Int4!
    - name: email
      type: Varchar
    - name: firstName
      type: Varchar
    - name: image
      type: Varchar
    - name: lastName
      type: Varchar
    - name: phoneNumber
      type: Varchar
    - name: postcode
      type: Varchar
    - name: segment
      type: Varchar
    - name: state
      type: Varchar
  graphql:
    typeName: Customers
    inputTypeName: CustomersInput
  dataConnectorTypeMapping:
    - dataConnectorName: mypostgres
      dataConnectorObjectType: customers
      fieldMapping:
        address:
          column:
            name: address
        city:
          column:
            name: city
        country:
          column:
            name: country
        customerId:
          column:
            name: customer_id
        email:
          column:
            name: email
        firstName:
          column:
            name: first_name
        image:
          column:
            name: image
        lastName:
          column:
            name: last_name
        phoneNumber:
          column:
            name: phone_number
        postcode:
          column:
            name: postcode
        segment:
          column:
            name: segment
        state:
          column:
            name: state

---
kind: TypePermissions
version: v1
definition:
  typeName: Customers
  permissions:
    - role: admin
      output:
        allowedFields:
          - address
          - city
          - country
          - customerId
          - email
          - firstName
          - image
          - lastName
          - phoneNumber
          - postcode
          - segment
          - state

---
kind: BooleanExpressionType
version: v1
definition:
  name: CustomersBoolExp
  operand:
    object:
      type: Customers
      comparableFields:
        - fieldName: address
          booleanExpressionType: VarcharBoolExp
        - fieldName: city
          booleanExpressionType: VarcharBoolExp
        - fieldName: country
          booleanExpressionType: VarcharBoolExp
        - fieldName: customerId
          booleanExpressionType: Int4BoolExp
        - fieldName: email
          booleanExpressionType: VarcharBoolExp
        - fieldName: firstName
          booleanExpressionType: VarcharBoolExp
        - fieldName: image
          booleanExpressionType: VarcharBoolExp
        - fieldName: lastName
          booleanExpressionType: VarcharBoolExp
        - fieldName: phoneNumber
          booleanExpressionType: VarcharBoolExp
        - fieldName: postcode
          booleanExpressionType: VarcharBoolExp
        - fieldName: segment
          booleanExpressionType: VarcharBoolExp
        - fieldName: state
          booleanExpressionType: VarcharBoolExp
      comparableRelationships: []
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: CustomersBoolExp

---
kind: AggregateExpression
version: v1
definition:
  name: CustomersAggExp
  operand:
    object:
      aggregatedType: Customers
      aggregatableFields:
        - fieldName: address
          aggregateExpression: VarcharAggExp
        - fieldName: city
          aggregateExpression: VarcharAggExp
        - fieldName: country
          aggregateExpression: VarcharAggExp
        - fieldName: customerId
          aggregateExpression: Int4AggExp
        - fieldName: email
          aggregateExpression: VarcharAggExp
        - fieldName: firstName
          aggregateExpression: VarcharAggExp
        - fieldName: image
          aggregateExpression: VarcharAggExp
        - fieldName: lastName
          aggregateExpression: VarcharAggExp
        - fieldName: phoneNumber
          aggregateExpression: VarcharAggExp
        - fieldName: postcode
          aggregateExpression: VarcharAggExp
        - fieldName: segment
          aggregateExpression: VarcharAggExp
        - fieldName: state
          aggregateExpression: VarcharAggExp
  count:
    enable: true
  graphql:
    selectTypeName: CustomersAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: CustomersOrderByExp
  operand:
    object:
      orderedType: Customers
      orderableFields:
        - fieldName: address
          orderByExpression: VarcharOrderByExp
        - fieldName: city
          orderByExpression: VarcharOrderByExp
        - fieldName: country
          orderByExpression: VarcharOrderByExp
        - fieldName: customerId
          orderByExpression: Int4OrderByExp
        - fieldName: email
          orderByExpression: VarcharOrderByExp
        - fieldName: firstName
          orderByExpression: VarcharOrderByExp
        - fieldName: image
          orderByExpression: VarcharOrderByExp
        - fieldName: lastName
          orderByExpression: VarcharOrderByExp
        - fieldName: phoneNumber
          orderByExpression: VarcharOrderByExp
        - fieldName: postcode
          orderByExpression: VarcharOrderByExp
        - fieldName: segment
          orderByExpression: VarcharOrderByExp
        - fieldName: state
          orderByExpression: VarcharOrderByExp
      orderableRelationships: []
  graphql:
    expressionTypeName: CustomersOrderByExp

---
kind: Model
version: v2
definition:
  name: Customers
  objectType: Customers
  source:
    dataConnectorName: mypostgres
    collection: customers
  filterExpressionType: CustomersBoolExp
  aggregateExpression: CustomersAggExp
  orderByExpression: CustomersOrderByExp
  graphql:
    selectMany:
      queryRootField: customers
      subscription:
        rootField: customers
    selectUniques:
      - queryRootField: customersByPhoneNumber
        uniqueIdentifier:
          - phoneNumber
        subscription:
          rootField: customersByPhoneNumber
      - queryRootField: customersByCustomerId
        uniqueIdentifier:
          - customerId
        subscription:
          rootField: customersByCustomerId
    filterInputTypeName: CustomersFilterInput
    aggregate:
      queryRootField: customersAggregate
      subscription:
        rootField: customersAggregate

---
kind: ModelPermissions
version: v1
definition:
  modelName: Customers
  permissions:
    - role: admin
      select:
        filter: null
        allowSubscriptions: true

