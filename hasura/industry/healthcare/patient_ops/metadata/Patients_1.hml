---
kind: ObjectType
version: v1
definition:
  name: Patients
  fields:
    - name: dateOfBirth
      type: Date_1
    - name: firstName
      type: Varchar_1
    - name: insurancePlanId
      type: Varchar_1
    - name: lastName
      type: Varchar_1
    - name: patientId
      type: Varchar_1!
  graphql:
    typeName: Patients
    inputTypeName: PatientsInput
  dataConnectorTypeMapping:
    - dataConnectorName: patients
      dataConnectorObjectType: patients
      fieldMapping:
        dateOfBirth:
          column:
            name: date_of_birth
        firstName:
          column:
            name: first_name
        insurancePlanId:
          column:
            name: insurance_plan_id
        lastName:
          column:
            name: last_name
        patientId:
          column:
            name: patient_id

---
kind: TypePermissions
version: v1
definition:
  typeName: Patients
  permissions:
    - role: admin
      output:
        allowedFields:
          - dateOfBirth
          - firstName
          - insurancePlanId
          - lastName
          - patientId

---
kind: BooleanExpressionType
version: v1
definition:
  name: PatientsBoolExp
  operand:
    object:
      type: Patients
      comparableFields:
        - fieldName: dateOfBirth
          booleanExpressionType: DateBoolExp_1
        - fieldName: firstName
          booleanExpressionType: VarcharBoolExp_1
        - fieldName: insurancePlanId
          booleanExpressionType: VarcharBoolExp_1
        - fieldName: lastName
          booleanExpressionType: VarcharBoolExp_1
        - fieldName: patientId
          booleanExpressionType: VarcharBoolExp_1
      comparableRelationships:
        - relationshipName: insurancePlan
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: PatientsBoolExp

---
kind: AggregateExpression
version: v1
definition:
  name: PatientsAggExp
  operand:
    object:
      aggregatedType: Patients
      aggregatableFields:
        - fieldName: dateOfBirth
          aggregateExpression: DateAggExp_1
        - fieldName: firstName
          aggregateExpression: VarcharAggExp_1
        - fieldName: insurancePlanId
          aggregateExpression: VarcharAggExp_1
        - fieldName: lastName
          aggregateExpression: VarcharAggExp_1
        - fieldName: patientId
          aggregateExpression: VarcharAggExp_1
  count:
    enable: true
  graphql:
    selectTypeName: PatientsAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: PatientsOrderByExp
  operand:
    object:
      orderedType: Patients
      orderableFields:
        - fieldName: dateOfBirth
          orderByExpression: Date1OrderByExp
        - fieldName: firstName
          orderByExpression: Varchar1OrderByExp
        - fieldName: insurancePlanId
          orderByExpression: Varchar1OrderByExp
        - fieldName: lastName
          orderByExpression: Varchar1OrderByExp
        - fieldName: patientId
          orderByExpression: Varchar1OrderByExp
      orderableRelationships:
        - relationshipName: insurancePlan
  graphql:
    expressionTypeName: PatientsOrderByExp

---
kind: Model
version: v2
definition:
  name: Patients
  objectType: Patients
  source:
    dataConnectorName: patients
    collection: patients
  filterExpressionType: PatientsBoolExp
  aggregateExpression: PatientsAggExp
  orderByExpression: PatientsOrderByExp
  graphql:
    selectMany:
      queryRootField: patients
      subscription:
        rootField: patients
    selectUniques:
      - queryRootField: patientsByPatientId
        uniqueIdentifier:
          - patientId
        subscription:
          rootField: patientsByPatientId
    filterInputTypeName: PatientsFilterInput
    aggregate:
      queryRootField: patientsAggregate
      subscription:
        rootField: patientsAggregate

---
kind: ModelPermissions
version: v1
definition:
  modelName: Patients
  permissions:
    - role: admin
      select:
        filter: null
        allowSubscriptions: true

---
kind: Relationship
version: v1
definition:
  name: insurancePlan
  sourceType: Patients
  target:
    model:
      name: InsurancePlans
      relationshipType: Object
  mapping:
    - source:
        fieldPath:
          - fieldName: insurancePlanId
      target:
        modelField:
          - fieldName: planId

