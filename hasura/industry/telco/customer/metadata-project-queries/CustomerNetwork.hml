---
kind: ObjectType
version: v1
definition:
  name: CustomerNetwork
  fields:
    - name: customerId
      type: Int4!
    - name: nodeId
      type: Int4!
  graphql:
    typeName: Customer_CustomerNetwork
    inputTypeName: Customer_CustomerNetworkInput
  dataConnectorTypeMapping:
    - dataConnectorName: aurora
      dataConnectorObjectType: customer_network
      fieldMapping:
        customerId:
          column:
            name: customer_id
        nodeId:
          column:
            name: node_id

---
kind: TypePermissions
version: v1
definition:
  typeName: CustomerNetwork
  permissions:
    - role: admin
      output:
        allowedFields:
          - customerId
          - nodeId
    - role: customer
      output:
        allowedFields:
          - customerId
          - nodeId

---
kind: Model
version: v2
definition:
  name: CustomerNetwork
  objectType: CustomerNetwork
  source:
    dataConnectorName: aurora
    collection: customer_network
  filterExpressionType: CustomerNetworkBoolExp
  graphql:
    selectMany:
      queryRootField: customerNetwork
    selectUniques:
      - queryRootField: customerNetworkByCustomerNetworkPkey
        uniqueIdentifier:
          - customerId
          - nodeId
    filterInputTypeName: CustomerNetworkFilterInput
    aggregate:
      queryRootField: customerNetworkAggregate
  aggregateExpression: CustomerNetworkAggExp
  orderByExpression: CustomerNetworkOrderByExp

---
kind: ModelPermissions
version: v1
definition:
  modelName: CustomerNetwork
  permissions:
    - role: admin
      select:
        filter: null
    - role: customer
      select:
        filter:
          relationship:
            name: customer
            predicate:
              fieldComparison:
                field: customerId
                operator: _eq
                value:
                  sessionVariable: 'x-hasura-user-id'

---
kind: Relationship
version: v1
definition:
  name: customer
  sourceType: CustomerNetwork
  target:
    model:
      name: Customers
      relationshipType: Object
  mapping:
    - source:
        fieldPath:
          - fieldName: customerId
      target:
        modelField:
          - fieldName: customerId

---
kind: Relationship
version: v1
definition:
  name: network
  sourceType: CustomerNetwork
  target:
    model:
      name: Network
      relationshipType: Object
  mapping:
    - source:
        fieldPath:
          - fieldName: nodeId
      target:
        modelField:
          - fieldName: nodeId

---
kind: BooleanExpressionType
version: v1
definition:
  name: CustomerNetworkBoolExp
  operand:
    object:
      type: CustomerNetwork
      comparableFields:
        - fieldName: customerId
          booleanExpressionType: Int4BoolExp
        - fieldName: nodeId
          booleanExpressionType: Int4BoolExp
      comparableRelationships:
        - relationshipName: customer
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Customer_CustomerNetworkBoolExp

---
kind: AggregateExpression
version: v1
definition:
  name: CustomerNetworkAggExp
  operand:
    object:
      aggregatedType: CustomerNetwork
      aggregatableFields:
        - fieldName: customerId
          aggregateExpression: Int4AggExp
        - fieldName: nodeId
          aggregateExpression: Int4AggExp
  count:
    enable: true
  graphql:
    selectTypeName: CustomerNetworkAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: CustomerNetworkOrderByExp
  operand:
    object:
      orderedType: CustomerNetwork
      orderableFields:
        - fieldName: customerId
          orderByExpression: Int4OrderByExp
        - fieldName: nodeId
          orderByExpression: Int4OrderByExp
      orderableRelationships:
        - relationshipName: customer
        - relationshipName: network
  graphql:
    expressionTypeName: customer_CustomerNetworkOrderByExp

