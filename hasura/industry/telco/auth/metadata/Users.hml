---
kind: ObjectType
version: v1
definition:
  name: Users
  description: For internal usage and authz usage only. Not for querying as part of user/customer requests
  fields:
    - name: createdAt
      type: Timestamptz!
    - name: email
      type: Varchar
    - name: id
      type: Int4!
    - name: password
      type: Varchar
    - name: roles
      type: Varchar
    - name: updatedAt
      type: Timestamptz!
  graphql:
    typeName: Users
    inputTypeName: Auth_UsersInput
  dataConnectorTypeMapping:
    - dataConnectorName: auth
      dataConnectorObjectType: users
      fieldMapping:
        createdAt:
          column:
            name: created_at
        email:
          column:
            name: email
        id:
          column:
            name: id
        password:
          column:
            name: password
        roles:
          column:
            name: roles
        updatedAt:
          column:
            name: updated_at

---
kind: TypePermissions
version: v1
definition:
  typeName: Users
  permissions:
    - role: admin
      output:
        allowedFields:
          - createdAt
          - email
          - id
          - password
          - roles
          - updatedAt
    - role: customer
      output:
        allowedFields:
          - email
          - id
          - password
          - roles

---
kind: Model
version: v2
definition:
  name: Users
  objectType: Users
  source:
    dataConnectorName: auth
    collection: users
  filterExpressionType: UsersBoolExp
  graphql:
    selectMany:
      queryRootField: users
      subscription:
        rootField: users
    selectUniques:
      - queryRootField: usersById
        uniqueIdentifier:
          - id
        subscription:
          rootField: usersById
    filterInputTypeName: UsersFilterInput
    aggregate:
      queryRootField: usersAggregate
      subscription:
        rootField: usersAggregate
  aggregateExpression: UsersAggExp
  orderByExpression: UsersOrderByExp

---
kind: ModelPermissions
version: v1
definition:
  modelName: Users
  permissions:
    - role: admin
      select:
        filter: null
        allowSubscriptions: true
    - role: customer
      select:
        filter:
          fieldComparison:
            field: id
            operator: _eq
            value:
              sessionVariable: x-hasura-user-id

---
kind: BooleanExpressionType
version: v1
definition:
  name: UsersBoolExp
  operand:
    object:
      type: Users
      comparableFields:
        - fieldName: createdAt
          booleanExpressionType: TimestamptzBoolExp
        - fieldName: email
          booleanExpressionType: VarcharBoolExp
        - fieldName: id
          booleanExpressionType: Int4BoolExp
        - fieldName: password
          booleanExpressionType: VarcharBoolExp
        - fieldName: roles
          booleanExpressionType: VarcharBoolExp
        - fieldName: updatedAt
          booleanExpressionType: TimestamptzBoolExp
      comparableRelationships: []
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Auth_UsersBoolExp

---
kind: AggregateExpression
version: v1
definition:
  name: UsersAggExp
  operand:
    object:
      aggregatedType: Users
      aggregatableFields:
        - fieldName: createdAt
          aggregateExpression: TimestamptzAggExp
        - fieldName: email
          aggregateExpression: VarcharAggExp
        - fieldName: id
          aggregateExpression: Int4AggExp
        - fieldName: password
          aggregateExpression: VarcharAggExp
        - fieldName: roles
          aggregateExpression: VarcharAggExp
        - fieldName: updatedAt
          aggregateExpression: TimestamptzAggExp
  count:
    enable: true
  graphql:
    selectTypeName: UsersAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: UsersOrderByExp
  operand:
    object:
      orderedType: Users
      orderableFields:
        - fieldName: createdAt
          orderByExpression: TimestamptzOrderByExp
        - fieldName: email
          orderByExpression: VarcharOrderByExp
        - fieldName: id
          orderByExpression: Int4OrderByExp
        - fieldName: password
          orderByExpression: VarcharOrderByExp
        - fieldName: roles
          orderByExpression: VarcharOrderByExp
        - fieldName: updatedAt
          orderByExpression: TimestamptzOrderByExp
      orderableRelationships: []
  graphql:
    expressionTypeName: auth_UsersOrderByExp

